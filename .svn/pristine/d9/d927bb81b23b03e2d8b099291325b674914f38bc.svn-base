<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zllh.factoring.common.dao.FacMessageMapper" >
  <resultMap id="BaseResultMap" type="com.zllh.factoring.common.model.FacMessage" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="serialno" property="serialNo" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="operator_id" property="operatorId" jdbcType="VARCHAR" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zllh.factoring.common.model.FacMessage" extends="BaseResultMap" >
    <result column="message" property="message" jdbcType="LONGVARCHAR" />
    <result column="refunddescription" property="refunddescription" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, serialno,createtime, operator_id, operator, source, status
  </sql>
  <sql id="Blob_Column_List" >
    message, refunddescription
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from fac_message
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from fac_message
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zllh.factoring.common.model.FacMessage" >
    insert into fac_message (id, serialno, createtime, operator_id, 
      operator, source, status, 
      message, refunddescription)
    values (#{id,jdbcType=VARCHAR}, #{serialNo,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{operatorId,jdbcType=VARCHAR}, 
      #{operator,jdbcType=VARCHAR}, #{source,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{message,jdbcType=LONGVARCHAR}, #{refunddescription,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zllh.factoring.common.model.FacMessage" >
    insert into fac_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="serialNo != null" >
        serialno,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="refunddescription != null" >
        refunddescription,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="serialNo != null" >
        #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        #{message,jdbcType=LONGVARCHAR},
      </if>
      <if test="refunddescription != null" >
        #{refunddescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zllh.factoring.common.model.FacMessage" >
    update fac_message
    <set >
      <if test="serialNo != null" >
        serialno = #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
      <if test="refunddescription != null" >
        refunddescription = #{refunddescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zllh.factoring.common.model.FacMessage" >
    update fac_message
    set createtime = #{createtime,jdbcType=TIMESTAMP},
      operator_id = #{operatorId,jdbcType=VARCHAR},
      serialno = #{serialNo,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      source = #{source,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      message = #{message,jdbcType=LONGVARCHAR},
      refunddescription = #{refunddescription,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zllh.factoring.common.model.FacMessage" >
    update fac_message
    set createtime = #{createtime,jdbcType=TIMESTAMP},
      serialno = #{serialNo,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      source = #{source,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="findMessageCheckList" resultMap="ResultMapWithBLOBs" parameterType="java.util.HashMap" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from fac_message
    <where>
    	<if test=" startcreateDate != null and startcreateDate != '' and endcreateDate != null and endcreateDate != ''">
	 	    AND<![CDATA[ createtime >= #{startcreateDate, jdbcType=TIMESTAMP} AND createtime < #{endcreateDate, jdbcType=TIMESTAMP}]]>
	 	</if>
    	<if test="messageSource != -1">
    		AND source = #{messageSource,jdbcType=VARCHAR}
    	</if>
    </where>
    LIMIT #{beginIndex},#{pageSize}
  </select>
  
  <select id="findMessageCheckListCount" resultType="int" parameterType="java.util.HashMap" >
    select COUNT(0) from fac_message
    <where>
    	<if test=" startcreateDate != null and startcreateDate != '' and endcreateDate != null and endcreateDate != ''">
	 	    AND<![CDATA[ createtime >= #{startcreateDate, jdbcType=TIMESTAMP} AND createtime < #{endcreateDate, jdbcType=TIMESTAMP}]]>
	 	</if>
    	<if test="messageSource != -1">
    		AND source = #{messageSource,jdbcType=VARCHAR}
    	</if>
    </where>
  </select>
  
</mapper>