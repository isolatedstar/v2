<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zllh.mall.common.dao.MtMmbBankAccountMapper" >
  <resultMap id="BaseResultMap" type="com.zllh.mall.common.model.MtMmbBankAccount" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="mmb_id" property="mmbId" jdbcType="VARCHAR" />
    <result column="accountno" property="accountno" jdbcType="VARCHAR" />
    <result column="accountname" property="accountname" jdbcType="VARCHAR" />
    <result column="bankname" property="bankname" jdbcType="VARCHAR" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="mobilephone" property="mobilephone" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, mmb_id, accountno, accountname, bankname, contact, mobilephone, phone, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from mt_mmb_bankaccount
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from mt_mmb_bankaccount
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zllh.mall.common.model.MtMmbBankAccount" >
    insert into mt_mmb_bankaccount (id, mmb_id, accountno, 
      accountname, bankname, contact, 
      mobilephone, phone, status
      )
    values (#{id,jdbcType=VARCHAR}, #{mmbId,jdbcType=VARCHAR}, #{accountno,jdbcType=VARCHAR}, 
      #{accountname,jdbcType=VARCHAR}, #{bankname,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, 
      #{mobilephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zllh.mall.common.model.MtMmbBankAccount" >
    insert into mt_mmb_bankaccount
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mmbId != null" >
        mmb_id,
      </if>
      <if test="accountno != null" >
        accountno,
      </if>
      <if test="accountname != null" >
        accountname,
      </if>
      <if test="bankname != null" >
        bankname,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="mobilephone != null" >
        mobilephone,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="mmbId != null" >
        #{mmbId,jdbcType=VARCHAR},
      </if>
      <if test="accountno != null" >
        #{accountno,jdbcType=VARCHAR},
      </if>
      <if test="accountname != null" >
        #{accountname,jdbcType=VARCHAR},
      </if>
      <if test="bankname != null" >
        #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="mobilephone != null" >
        #{mobilephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zllh.mall.common.model.MtMmbBankAccount" >
    update mt_mmb_bankaccount
    <set >
      <if test="mmbId != null" >
        mmb_id = #{mmbId,jdbcType=VARCHAR},
      </if>
      <if test="accountno != null" >
        accountno = #{accountno,jdbcType=VARCHAR},
      </if>
      <if test="accountname != null" >
        accountname = #{accountname,jdbcType=VARCHAR},
      </if>
      <if test="bankname != null" >
        bankname = #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="mobilephone != null" >
        mobilephone = #{mobilephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zllh.mall.common.model.MtMmbBankAccount" >
    update mt_mmb_bankaccount
    set mmb_id = #{mmbId,jdbcType=VARCHAR},
      accountno = #{accountno,jdbcType=VARCHAR},
      accountname = #{accountname,jdbcType=VARCHAR},
      bankname = #{bankname,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      mobilephone = #{mobilephone,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--得到会员银行账号-->
  <select id="getMmbBankAccount" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select
    <include refid="Base_Column_List" />
    from mt_mmb_bankaccount
    where mmb_id = #{mmbId,jdbcType=VARCHAR}
    <if test=" accountname != null ">
      <![CDATA[
      and accountname like  CONCAT ('%',#{accountname,jdbcType=VARCHAR},'%')
      ]]>
    </if>
    <if test="startFirst != null and startEnd != null" >
      limit #{startFirst},#{startEnd}
    </if>

  </select>

  <!--得到会员银行账号-->
  <select id="getMmbBankAccountByMmbId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from mt_mmb_bankaccount
    where mmb_id = #{mmbId,jdbcType=VARCHAR}

  </select>

  <!--得到会员收付款账号-->
  <select id="getBankAccountByAccountNo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from mt_mmb_bankaccount
    where accountno = #{accountno,jdbcType=VARCHAR}
	limit 1
  </select>

  <!--验证银行账号唯一性-->
  <select id="getNumByAccountNo" resultType="java.lang.Integer" >
    select   count(1)
    from mt_mmb_bankaccount
    where accountno = #{accountno,jdbcType=VARCHAR}

    <if test="id !=null and id != ''">
      and id != #{id,jdbcType=VARCHAR}
    </if>
  </select>




</mapper>