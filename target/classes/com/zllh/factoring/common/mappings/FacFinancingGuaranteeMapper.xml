<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zllh.factoring.common.dao.FacFinancingGuaranteeMapper" >
  <resultMap id="BaseResultMap" type="com.zllh.factoring.common.model.FacFinancingGuarantee" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="financing_id" property="financingId" jdbcType="VARCHAR" />
    <result column="guarantee_id" property="guaranteeId" jdbcType="VARCHAR" />
    <result column="freeze_amount" property="freezeAmount" jdbcType="DECIMAL" />
    <result column="payments_amount" property="paymentsAmount" jdbcType="DECIMAL" />
    <result column="refund_amount" property="refundAmount" jdbcType="DECIMAL" />
    <result column="lock_amount" property="lockAmount" jdbcType="DECIMAL" />
    <result column="surplus_freeze_amount" property="surplusFreezeAmount" jdbcType="DECIMAL" />
    <result column="surplus_payments_amount" property="surplusPaymentsAmount" jdbcType="DECIMAL" />
    <result column="interest" property="interest" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, financing_id, guarantee_id, freeze_amount, payments_amount, refund_amount, lock_amount, 
    surplus_freeze_amount, surplus_payments_amount, interest, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from fac_financing_guarantee
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKey1" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from fac_financing_guarantee
    where guarantee_id =#{id,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByPrimaryKey2" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from fac_financing_guarantee
    where financing_id =#{financingID,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from fac_financing_guarantee
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zllh.factoring.common.model.FacFinancingGuarantee" >
    insert into fac_financing_guarantee (id, financing_id, guarantee_id, 
      freeze_amount, payments_amount, refund_amount, 
      lock_amount, surplus_freeze_amount, surplus_payments_amount, interest, 
      status)
    values (#{id,jdbcType=VARCHAR}, #{financingId,jdbcType=VARCHAR}, #{guaranteeId,jdbcType=VARCHAR}, 
      #{freezeAmount,jdbcType=DECIMAL}, #{paymentsAmount,jdbcType=DECIMAL}, #{refundAmount,jdbcType=DECIMAL}, 
      #{lockAmount,jdbcType=DECIMAL}, #{surplusFreezeAmount,jdbcType=DECIMAL}, #{surplusPaymentsAmount,jdbcType=DECIMAL}, 
      #{interest,jdbcType=DECIMAL},#{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zllh.factoring.common.model.FacFinancingGuarantee" >
    insert into fac_financing_guarantee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="financingId != null" >
        financing_id,
      </if>
      <if test="guaranteeId != null" >
        guarantee_id,
      </if>
      <if test="freezeAmount != null" >
        freeze_amount,
      </if>
      <if test="paymentsAmount != null" >
        payments_amount,
      </if>
      <if test="refundAmount != null" >
        refund_amount,
      </if>
      <if test="lockAmount != null" >
        lock_amount,
      </if>
      <if test="surplusFreezeAmount != null" >
        surplus_freeze_amount,
      </if>
      <if test="surplusPaymentsAmount != null" >
        surplus_payments_amount,
      </if>
      <if test="interest != null" >
        interest,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="financingId != null" >
        #{financingId,jdbcType=VARCHAR},
      </if>
      <if test="guaranteeId != null" >
        #{guaranteeId,jdbcType=VARCHAR},
      </if>
      <if test="freezeAmount != null" >
        #{freezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="paymentsAmount != null" >
        #{paymentsAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundAmount != null" >
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="lockAmount != null" >
        #{lockAmount,jdbcType=DECIMAL},
      </if>
      <if test="surplusFreezeAmount != null" >
        #{surplusFreezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="surplusPaymentsAmount != null" >
        #{surplusPaymentsAmount,jdbcType=DECIMAL},
      </if>
      <if test="interest != null" >
        #{interest,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zllh.factoring.common.model.FacFinancingGuarantee" >
    update fac_financing_guarantee
    <set >
      <if test="financingId != null" >
        financing_id = #{financingId,jdbcType=VARCHAR},
      </if>
      <if test="guaranteeId != null" >
        guarantee_id = #{guaranteeId,jdbcType=VARCHAR},
      </if>
      <if test="freezeAmount != null" >
        freeze_amount = #{freezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="paymentsAmount != null" >
        payments_amount = #{paymentsAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundAmount != null" >
        refund_amount = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="lockAmount != null" >
        lock_amount = #{lockAmount,jdbcType=DECIMAL},
      </if>
      <if test="surplusFreezeAmount != null" >
        surplus_freeze_amount = #{surplusFreezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="surplusPaymentsAmount != null" >
        surplus_payments_amount = #{surplusPaymentsAmount,jdbcType=DECIMAL},
      </if>
      <if test="interest != null" >
        interest = #{interest,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zllh.factoring.common.model.FacFinancingGuarantee" >
    update fac_financing_guarantee
    set financing_id = #{financingId,jdbcType=VARCHAR},
      guarantee_id = #{guaranteeId,jdbcType=VARCHAR},
      freeze_amount = #{freezeAmount,jdbcType=DECIMAL},
      payments_amount = #{paymentsAmount,jdbcType=DECIMAL},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      lock_amount = #{lockAmount,jdbcType=DECIMAL},
      surplus_freeze_amount = #{surplusFreezeAmount,jdbcType=DECIMAL},
      surplus_payments_amount = #{surplusPaymentsAmount,jdbcType=DECIMAL},
      interest = #{interest,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
   <update id="updateByPrimaryKeys" parameterType="com.zllh.factoring.common.model.FacFinancingGuarantee" >
    update fac_financing_guarantee
    set financing_id = #{financingId,jdbcType=VARCHAR},
      guarantee_id = #{guaranteeId,jdbcType=VARCHAR},
      freeze_amount = #{freezeAmount,jdbcType=DECIMAL},
      payments_amount = #{paymentsAmount,jdbcType=DECIMAL},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      lock_amount = #{lockAmount,jdbcType=DECIMAL},
      surplus_freeze_amount = #{surplusFreezeAmount,jdbcType=DECIMAL},
      surplus_payments_amount = #{surplusPaymentsAmount,jdbcType=DECIMAL},
      interest = #{interest,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateFinancingGuarantee">
    UPDATE fac_financing_guarantee SET refund_amount = CASE id 
		<foreach collection="list" item="item" index="index">
	        WHEN #{item.id} THEN #{item.refundAmount}
		</foreach>
		 END,
		 surplus_freeze_amount = CASE id 
		<foreach collection="list" item="item" index="index">
	        WHEN #{item.id} THEN #{item.surplusFreezeAmount}
		</foreach>
		 END,
		 surplus_payments_amount = CASE id 
		<foreach collection="list" item="item" index="index">
	        WHEN #{item.id} THEN #{item.surplusPaymentsAmount}
		</foreach>
		 END
		<where>
			<foreach collection="list" item="item" index="index" open="( id = " separator="or id =" close=")">
				#{item.id}
			</foreach>
		</where>	
  </update>  
  
  <insert id="insertList">
    insert into fac_financing_guarantee (id, financing_id, guarantee_id, freeze_amount, payments_amount, refund_amount, 
      lock_amount, surplus_freeze_amount, surplus_payments_amount, status)
    values 
      <foreach collection="list" item="item" index="index" separator=",">
	      (#{item.id,jdbcType=VARCHAR}, #{item.financingId,jdbcType=VARCHAR}, #{item.guaranteeId,jdbcType=VARCHAR},#{item.freezeAmount,jdbcType=DECIMAL}, 
	       #{item.paymentsAmount,jdbcType=DECIMAL}, #{item.refundAmount,jdbcType=DECIMAL},#{item.lockAmount,jdbcType=DECIMAL},
	       #{item.surplusFreezeAmount,jdbcType=DECIMAL}, #{item.surplusPaymentsAmount,jdbcType=DECIMAL}, #{item.status,jdbcType=INTEGER})
       </foreach>
  </insert>

  <resultMap type="com.zllh.factoring.common.model.model_extend.FacFinancingGuaranteeExtendBean" id="guafin" extends="BaseResultMap">
    <association property="facGuaranteeBill" javaType="com.zllh.factoring.common.model.FacGuaranteeBill" >
		<id column="guarantee_id1" property="guaranteeId" jdbcType="VARCHAR" />
	    <result column="guarantee_amount" property="guaranteeAmount" jdbcType="DECIMAL" />
	    <result column="payment_amount" property="paymentAmount" jdbcType="DECIMAL" />
	    <result column="non_pay_amount" property="nonPayAmount" jdbcType="DECIMAL" />
	    <result column="usable_amount" property="usableAmount" jdbcType="DECIMAL" />
	    <result column="payer_id" property="payerId" jdbcType="VARCHAR" />
	    <result column="payer_name" property="payerName" jdbcType="VARCHAR" />
	    <result column="payee_id" property="payeeId" jdbcType="VARCHAR" />
	    <result column="payee_name" property="payeeName" jdbcType="VARCHAR" />
	    <result column="guarantee_affirm" property="guaranteeAffirm" jdbcType="INTEGER" />
	    <result column="proposer_affirm" property="proposerAffirm" jdbcType="INTEGER" />
	    <result column="thirdparty_affirm" property="thirdpartyAffirm" jdbcType="INTEGER" />
	    <result column="guaranteeoperate_id" property="guaranteeoperateId" jdbcType="VARCHAR" />
	    <result column="guarantee_name" property="guaranteeName" jdbcType="VARCHAR" />
	    <result column="operation_date" property="operationDate" jdbcType="TIMESTAMP" />
	    <result column="expire_date" property="expireDate" jdbcType="TIMESTAMP" />
	    <result column="lock" property="lock" jdbcType="INTEGER" />
	    <result column="status1" property="status" jdbcType="INTEGER" />
	    <result column="bloc_account" property="blocAccount" jdbcType="VARCHAR" />
	    <result column="school_general_account" property="schoolGeneralAccount" jdbcType="VARCHAR" />
	    <result column="school_theoretical_account" property="schoolTheoreticalAccount" jdbcType="VARCHAR" />
	    <result column="distributor_name" property="distributorName" jdbcType="VARCHAR" />
	    <result column="distributor_theoretical_bank" property="distributorTheoreticalBank" jdbcType="VARCHAR" />
	    <result column="distributor_general_bank" property="distributorGeneralBank" jdbcType="VARCHAR" />
    </association>
    <association property="facFinancing" javaType="com.zllh.factoring.common.model.model_extend.FacFinancingExtendBean" >
	    <id column="id1" property="id" jdbcType="VARCHAR" />
	    <result column="financing_id1" property="financingId" jdbcType="VARCHAR" />
	    <result column="wait_pay_total" property="waitPayTotal" jdbcType="DECIMAL" />
	    <result column="predict_service_fee" property="predictServiceFee" jdbcType="DECIMAL" />
	    <result column="predict_refund_date" property="predictRefundDate" jdbcType="TIMESTAMP" />
	    <result column="predict_interest" property="predictInterest" jdbcType="DECIMAL" />
	    <result column="assure_type" property="assureType" jdbcType="INTEGER" />
	    <result column="bank" property="bank" jdbcType="VARCHAR" />
	    <result column="financing_date" property="financingDate" jdbcType="TIMESTAMP" />
	    <result column="factoring_name_id" property="factoringNameId" jdbcType="INTEGER" />
	    <result column="apply_organization_id" property="applyOrganizationId" jdbcType="VARCHAR" />
	    <result column="proposer_id" property="proposerId" jdbcType="VARCHAR" />
	    <result column="proposer_name" property="proposerName" jdbcType="VARCHAR" />
	    <result column="proposer_date" property="proposerDate" jdbcType="TIMESTAMP" />
	    <result column="accept_operator_id" property="acceptOperatorId" jdbcType="VARCHAR" />
	    <result column="accept_operator_name" property="acceptOperatorName" jdbcType="VARCHAR" />
	    <result column="accept_date" property="acceptDate" jdbcType="TIMESTAMP" />
	    <result column="lock1" property="lock" jdbcType="INTEGER" />
	    <result column="status2" property="status" jdbcType="INTEGER" />
	    <result column="distributor_name1" property="distributorName" jdbcType="VARCHAR" />
	    <result column="distributor_theoretical_bank1" property="distributorTheoreticalBank" jdbcType="VARCHAR" />
	    <result column="distributor_general_bank1" property="distributorGeneralBank" jdbcType="VARCHAR" />
	    <result column="corporate_champion_name" property="corporateChampionName" jdbcType="VARCHAR" />
	    <result column="corporate_championr_theoretical_bank" property="corporateChampionrTheoreticalBank" jdbcType="VARCHAR" />
	    <result column="corporate_championr_general_bank" property="corporateChampionrGeneralBank" jdbcType="VARCHAR" />
	    <result column="expire_rate" property="expireRate" jdbcType="DOUBLE" />
	    <result column="extend_rate" property="extendRate" jdbcType="DOUBLE" />
	    <result column="bloc_account1" property="blocAccount" jdbcType="VARCHAR" />
	    <result column="member_id" property="memberId" jdbcType="VARCHAR" />
	    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
	    <result column="acct_name" property="acctName" jdbcType="VARCHAR" />
	    <result column="member_account" property="memberAccount" jdbcType="VARCHAR" />
	    <result column="stt_last_refund_id" property="sttLastRefundId" jdbcType="VARCHAR" />
	    <result column="stt_last_refund_data" property="sttLastRefundData" jdbcType="TIMESTAMP" />
	    
    </association>
  </resultMap>

  <select id="selectFinGuaByPayeeId" resultMap="guafin" parameterType="java.util.HashMap">
  	SELECT
		fing.id, fing.financing_id, fing.guarantee_id guarantee_id, fing.freeze_amount, fing.payments_amount, fing.refund_amount, fing.lock_amount, 
	    fing.surplus_freeze_amount, fing.surplus_payments_amount, fing.`status`,
		facg.guarantee_id guarantee_id1, facg.guarantee_amount, facg.payment_amount, facg.non_pay_amount, facg.payer_id, facg.payer_name, 
	    facg.payee_id, facg.payee_name, facg.guarantee_affirm, facg.proposer_affirm, facg.thirdparty_affirm, facg.guaranteeoperate_id, 
	    facg.guarantee_name, facg.operation_date, facg.expire_date, facg.`lock`, facg.`status` status1, facg.school_general_account, 
	    facg.school_theoretical_account, facg.distributor_name, facg.distributor_theoretical_bank, facg.distributor_general_bank,facg.bloc_account,
	    fin.id id1, fin.financing_id financing_id1, fin.wait_pay_total, fin.predict_service_fee, fin.predict_refund_date, fin.predict_interest, 
		fin.assure_type, fin.bank, fin.financing_date, fin.factoring_name_id, fin.apply_organization_id, fin.proposer_id, 
	    fin.proposer_name, fin.proposer_date, fin.accept_operator_id, fin.accept_operator_name, fin.accept_date, 
	    fin.`lock` `lock1`, fin.`status` status2, fin.distributor_name distributor_name1, fin.distributor_theoretical_bank distributor_theoretical_bank1, 
	    fin.distributor_general_bank distributor_general_bank1, 
	    fin.corporate_champion_name, fin.corporate_championr_theoretical_bank, fin.corporate_championr_general_bank, 
	    fin.expire_rate, fin.extend_rate, fin.bloc_account bloc_account1, fin.member_id, fin.member_name, fin.acct_name, 
	    fin.member_account, fin.stt_last_refund_id, fin.stt_last_refund_data
	FROM fac_financing_guarantee fing
	JOIN fac_guarantee_bill facg  ON facg.guarantee_id = fing.guarantee_id AND fing.status = #{status, jdbcType=INTEGER} AND fing.payments_amount != fing.refund_amount
	JOIN fac_financing fin        ON fing.financing_id = fin.financing_id  AND fin.apply_organization_id = facg.payee_id
	WHERE facg.payee_id = #{payeeId, jdbcType=VARCHAR}
  </select>

 <delete id="deleteByForeignKey" parameterType="com.zllh.factoring.common.model.FacFinancingGuarantee">
 	 delete from fac_financing_guarantee
    where financing_id = #{financingId,jdbcType=VARCHAR} and guarantee_id = #{guaranteeId,jdbcType=VARCHAR}
 </delete>

 <select id="selectOutInterest" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		id,
		financing_id,
		guarantee_id,
		freeze_amount,
		payments_amount,
		refund_amount,
		surplus_freeze_amount,
		surplus_payments_amount,
		interest
	FROM
		fac_financing_guarantee
    <where>
    	<![CDATA[ (surplus_freeze_amount < interest + surplus_payments_amount) AND (`status` != 2 OR `status` IS NULL)]]>
    	<if test="financingId !=''">
    		AND financing_id = #{financingId,jdbcType=VARCHAR}
    	</if>
    	<if test="guaranteeId !=''">
    		AND guarantee_id = #{guaranteeId,jdbcType=VARCHAR}
    	</if>
    </where>LIMIT #{beginIndex},#{pageSize}
 </select>
 
 <select id="selectOutInterestCount" resultType="int" parameterType="java.util.HashMap" >
    SELECT COUNT(0) FROM fac_financing_guarantee
    <where>
    	<![CDATA[ (surplus_freeze_amount < interest + surplus_payments_amount) AND (`status` != 2 OR `status` IS NULL)]]>
    	<if test="financingId !=''">
    		AND financing_id = #{financingId,jdbcType=VARCHAR}
    	</if>
    	<if test="guaranteeId !=''">
    		AND guarantee_id = #{guaranteeId,jdbcType=VARCHAR}
    	</if>
    </where>
 </select>
 
 <select id="selectOutInterestHistry" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    SELECT
		fin.id,
		fin.financing_id,
		fin.guarantee_id,
		fin.freeze_amount,
		fin.payments_amount,
		fin.refund_amount,
		fin.surplus_freeze_amount,
		fin.surplus_payments_amount,
		fin.interest,
		(IFNULL(woa.surplus_payments_amount, 0) + IFNULL(woa.interest,0)) lock_amount
	FROM
		fac_financing_guarantee fin
	LEFT JOIN fac_writeoffacc woa ON fin.id = woa.id
    <where>
    	<![CDATA[fin.`status` = #{writeoffacc,jdbcType=INTEGER}]]>
    	<if test="financingId !=''">
    		AND fin.financing_id = #{financingId,jdbcType=VARCHAR}
    	</if>
    	<if test="guaranteeId !=''">
    		AND fin.guarantee_id = #{guaranteeId,jdbcType=VARCHAR}
    	</if>
    </where>LIMIT #{beginIndex},#{pageSize}
 </select>
 
 <select id="selectOutInterestHistryCount" resultType="int" parameterType="java.util.HashMap" >
    SELECT 
    	COUNT(0) 
    FROM 
    	fac_financing_guarantee fin
	LEFT JOIN fac_writeoffacc woa ON fin.id = woa.id
    <where>
    	<![CDATA[fin.`status` = #{writeoffacc,jdbcType=INTEGER}]]>
    	<if test="financingId !=''">
    		AND fin.financing_id = #{financingId,jdbcType=VARCHAR}
    	</if>
    	<if test="guaranteeId !=''">
    		AND fin.guarantee_id = #{guaranteeId,jdbcType=VARCHAR}
    	</if>
    </where>
 </select>
 
  <select id="selectFinancingGuarantee" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM fac_financing_guarantee
    <where>
    	<foreach collection="array" item="item" index="index" open="( id = " separator="or id =" close=")">
    		#{item}
    	</foreach>
    </where>
 </select>
 
  <select id="selectByFinIdAndGuaId" resultType="int" parameterType="java.util.HashMap">
    <![CDATA[ SELECT COUNT(0) FROM fac_financing_guarantee 
    WHERE id <> #{id,jdbcType=VARCHAR} AND financing_id = #{finId,jdbcType=VARCHAR} AND surplus_payments_amount > 0]]>
 </select>

</mapper>