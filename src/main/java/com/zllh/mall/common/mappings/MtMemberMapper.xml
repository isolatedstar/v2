<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zllh.mall.common.dao.MtMemberMapper">
	<resultMap id="BaseResultMap" type="com.zllh.mall.common.model.MtMember">
		<result column="id" property="id" jdbcType="VARCHAR" />
		<result column="mmb_fname" property="mmbFname" jdbcType="VARCHAR" />
		<result column="mmb_engSname" property="mmbEngSname" jdbcType="VARCHAR" />
		<result column="mmb_sname" property="mmbSname" jdbcType="VARCHAR" />
		<result column="mmb_type" property="mmbType" jdbcType="INTEGER" />
		<result column="mmb_homePage" property="mmbHomepage" jdbcType="VARCHAR" />
		<result column="mmb_email" property="mmbEmail" jdbcType="VARCHAR" />
		<result column="mmb_phone" property="mmbPhone" jdbcType="VARCHAR" />
		<result column="mmb_address" property="mmbAddress" jdbcType="VARCHAR" />
		<result column="mmb_areaId" property="mmbAreaId" jdbcType="VARCHAR" />
		<result column="mmb_status" property="mmbStatus" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	
	<!-- 查询返回地域以及业务类型信息 -->
	<resultMap type="com.zllh.mall.common.model.MtMember" id="returnMap1" extends="BaseResultMap" >
	    <result column="AREA_NAME" property="mmbAreaName" jdbcType="VARCHAR"/>
	    <result column="rela_grade" property="concernGrade" jdbcType="VARCHAR"/>
	    <result column="relaId" property="relaId" jdbcType="VARCHAR"/>
	    <result column="mmbId_" property="mmbId_" jdbcType="VARCHAR"/>
	    <result column="relaMmbId_" property="relaMmbId_" jdbcType="VARCHAR"/>
	    <collection property="bizTypes" javaType="list" ofType="com.zllh.mall.common.model.MtMmbType">
	        <result column="bizId" property="id" jdbcType="VARCHAR" />
			<result column="bizMmbId" property="mmbId" jdbcType="VARCHAR" />
			<result column="bizType" property="mmbType" jdbcType="INTEGER" />
	    </collection>
	</resultMap>
	
	<!--查询返回创建日期格式化map  -->
	<resultMap type="com.zllh.mall.common.model.MtMember" id="returnMap2" extends="BaseResultMap" >
	    <result column="createDate" property="createDate" jdbcType="VARCHAR"/>
	</resultMap>
	
	<!--根据会员id查询会员信息以及会员业务类型信息和地域名称  -->
	<select id="queryMmbById" resultMap="returnMap1" parameterType="java.lang.String">
	    SELECT
			a.id,
			a.mmb_fname,
			a.mmb_sname,
			a.mmb_engSname,
			a.mmb_areaId,
			a.mmb_address,
			a.mmb_email,
			a.mmb_homePage,
			a.mmb_phone,
			a.mmb_status,
			a.mmb_type,
			a.create_time,
			tree.AREA_NAME,
			type.id as bizId,
			type.mmb_id as bizMmbId,
			type.mmb_type as bizType
		FROM
			mt_member a
		LEFT JOIN bus_area_tree tree ON a.mmb_areaId = tree.ID
		LEFT JOIN mt_mmb_type type ON a.id = type.mmb_id
		WHERE
			a.id = #{id,jdbcType=VARCHAR}
	</select>

	<!--业务合作会员目录  -->
	<select id="queryInfoById" resultMap="returnMap1" parameterType="java.util.Map">
			SELECT
				member.*,
				ship.rela_grade,
				ship.id as relaId,
				ship.mmb_id as mmbId_,
				ship.rela_mmb_id as relaMmbId_
			FROM
				mt_member member
			LEFT JOIN mt_member_relationship ship ON ship.rela_type = #{relaType,jdbcType=INTEGER}
			<if test="operateType !=null and operateType==0">
				AND ship.rela_mmb_id = member.id
				and ship.rela_mmb_id = #{id,jdbcType=VARCHAR}
				and ship.mmb_id = #{relaId,jdbcType=VARCHAR}
			</if>
			<if test="operateType !=null and operateType==1">
				AND ship.mmb_id = member.id
				and ship.rela_mmb_id = #{relaId,jdbcType=VARCHAR}
				and ship.mmb_id = #{id,jdbcType=VARCHAR}
			</if>
			<if test="operateType ==null">
				AND ship.rela_mmb_id = member.id
				and ship.rela_mmb_id = #{id,jdbcType=VARCHAR}
				and ship.mmb_id = #{relaId,jdbcType=VARCHAR}
			</if>
			WHERE
				member.id = #{id,jdbcType=VARCHAR}
	</select>
	
	<!--新增会员 -->
	<insert id="insert" parameterType="com.zllh.mall.common.model.MtMember">
		insert into mt_member (id,
		mmb_fname, mmb_sname,mmb_engSname,
		mmb_type, mmb_homePage, mmb_email,
		mmb_phone,
		mmb_address, mmb_areaId,
		mmb_status,create_time)
		values (#{id,jdbcType=VARCHAR},
		#{mmbFname,jdbcType=VARCHAR},
		#{mmbSname,jdbcType=VARCHAR},#{mmbEngSname,jdbcType=VARCHAR},
		#{mmbType,jdbcType=INTEGER}, #{mmbHomepage,jdbcType=VARCHAR},
		#{mmbEmail,jdbcType=VARCHAR},
		#{mmbPhone,jdbcType=VARCHAR},
		#{mmbAddress,jdbcType=VARCHAR},
		#{mmbAreaId,jdbcType=VARCHAR},
		#{mmbStatus,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.zllh.mall.common.model.MtMember">
		insert into mt_member
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="mmbFname != null">
				mmb_fname,
			</if>
			<if test="mmbSname != null">
				mmb_sname,
			</if>
			<if test="mmbType != null">
				mmb_type,
			</if>
			<if test="mmbHomepage != null">
				mmb_homePage,
			</if>
			<if test="mmbEmail != null">
				mmb_email,
			</if>
			<if test="mmbPhone != null">
				mmb_phone,
			</if>
			<if test="mmbAddress != null">
				mmb_address,
			</if>
			<if test="mmbAreaId != null">
				mmb_areaId,
			</if>
			<if test="mmbStatus != null">
				mmb_status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="mmbFname != null">
				#{mmbFname,jdbcType=VARCHAR},
			</if>
			<if test="mmbSname != null">
				#{mmbSname,jdbcType=VARCHAR},
			</if>
			<if test="mmbType != null">
				#{mmbType,jdbcType=INTEGER},
			</if>
			<if test="mmbHomepage != null">
				#{mmbHomepage,jdbcType=VARCHAR},
			</if>
			<if test="mmbEmail != null">
				#{mmbEmail,jdbcType=VARCHAR},
			</if>
			<if test="mmbPhone != null">
				#{mmbPhone,jdbcType=VARCHAR},
			</if>
			<if test="mmbAddress != null">
				#{mmbAddress,jdbcType=VARCHAR},
			</if>
			<if test="mmbAreaId != null">
				#{mmbAreaId,jdbcType=VARCHAR},
			</if>
			<if test="mmbStatus != null">
				#{mmbStatus,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<!--修改会员 -->
	<update id="updatePubMmb" parameterType="com.zllh.mall.common.model.MtMember">
		update mt_member
		<set>
			<if test="mmbFname != null">
				mmb_fname = #{mmbFname,jdbcType=VARCHAR},
			</if>
			<if test="mmbSname != null">
				mmb_sname = #{mmbSname,jdbcType=VARCHAR},
			</if>
			<if test="mmbEngSname != null">
				mmb_engSname = #{mmbEngSname,jdbcType=VARCHAR},
			</if>
			<if test="mmbType != null">
				mmb_type = #{mmbType,jdbcType=INTEGER},
			</if>
			<if test="mmbHomepage != null">
				mmb_homePage = #{mmbHomepage,jdbcType=VARCHAR},
			</if>
			<if test="mmbEmail != null">
				mmb_email = #{mmbEmail,jdbcType=VARCHAR},
			</if>
			<if test="mmbPhone != null">
				mmb_phone = #{mmbPhone,jdbcType=VARCHAR},
			</if>
			<if test="mmbAddress != null">
				mmb_address = #{mmbAddress,jdbcType=VARCHAR},
			</if>
			<if test="mmbAreaId != null">
				mmb_areaId = #{mmbAreaId,jdbcType=VARCHAR},
			</if>
			<if test="mmbStatus != null">
				mmb_status = #{mmbStatus,jdbcType=INTEGER}
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<!--基本sql语句 -->
	<sql id="Base_Column_List">
		id, mmb_fname,mmb_engSname, mmb_sname, mmb_type
		,mmb_homePage,mmb_email,mmb_phone,mmb_address,mmb_areaId,mmb_status,create_time
	</sql>
	<!--修改会员状态 -->
	<update id="updatePubMmbStatus" parameterType="com.zllh.mall.common.model.MtMember">
		update mt_member
		<set>
			<if test="mmbStatus!=null">
				mmb_status = #{mmbStatus,jdbcType=INTEGER}
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<!-- 模糊查询条件判断 -->
	<sql id="mmb_SearchCondition">
		<if test=" mmbFname!= null "><![CDATA[ and mmb.mmb_fname  like CONCAT('%',#{mmbFname},'%')]]></if>
	</sql>
	
	<!-- 报价使用模糊查询条件判断 -->
	<sql id="quote_SearchCondition">
		<if test=" mmbSname!= null "><![CDATA[ and member.mmb_sname  like CONCAT('%',#{mmbSname},'%')]]></if>
	</sql>
	
	
	<!--条件查询会员  -->
	<select id="queryAllMmbByCondition" resultMap="returnMap2"
		parameterType="java.util.Map">
		SELECT
			mmb.id, mmb.mmb_fname,mmb.mmb_engSname, 
			mmb.mmb_sname, mmb.mmb_type,
			mmb.mmb_homePage,mmb.mmb_email,
			mmb.mmb_phone,mmb.mmb_address,
			mmb.mmb_areaId,mmb.mmb_status,
			mmb.create_time,
			date_format(create_time,'%Y-%m-%d') as createDate
		FROM
			mt_member mmb
		WHERE
			1 = 1
		<include refid="mmb_SearchCondition" />
		order by mmb.create_time desc
		<if test="startFirst != null and startEnd != null">
			limit #{startFirst},#{startEnd}
		</if>
	</select>
	
	<!--根据报价id查询相关会员信息  -->
	<select id="queryMmbsInfoByQuoteId" resultMap="returnMap2"
		parameterType="java.util.Map">
		SELECT
			DISTINCT member.*
		FROM
			mt_member member
		INNER JOIN mt_quote_scope quote ON quote.scope_id = member.id and member.mmb_status = 0
		WHERE
			quote.type = #{type,jdbcType=INTEGER} 
		AND quote_id = #{quoteId,jdbcType=VARCHAR}
	</select>
	
	<select id="queryMmbsByQuoteType" resultMap="returnMap2"
		parameterType="java.util.Map">
		SELECT
			DISTINCT member.*
		FROM
			mt_member_relationship ship
		<if test="type != null and type == 0">
			INNER JOIN mt_member member on ship.rela_mmb_id = member.id and ship.rela_status = 0 and ship.rela_type=1
			where ship.mmb_id = #{mmbId,jdbcType=VARCHAR} and member.mmb_status = 0 and ship.biz_type = 1002
		</if>
		<if test="type != null and type == 1">
			INNER JOIN mt_member member on ship.mmb_id = member.id and ship.rela_status = 0 and ship.rela_type=1
			where ship.rela_mmb_id = #{mmbId,jdbcType=VARCHAR} and member.mmb_status = 0 and ship.biz_type = 1002
		</if>
		<include refid="quote_SearchCondition" />
		<if test="startFirst != null and startEnd != null">
			limit #{startFirst},#{startEnd}
		</if>
	</select>
	
	<select id="countMmbsByQuoteType" resultType="java.lang.Integer"
		parameterType="java.util.Map">
		SELECT
			count(*)
		FROM
			mt_member_relationship ship
		<if test="type != null and type == 0">
			INNER JOIN mt_member member on ship.rela_mmb_id = member.id
			where ship.mmb_id = #{mmbId,jdbcType=VARCHAR} and ship.biz_type = 1002
		</if>
		<if test="type != null and type == 1">
			INNER JOIN mt_member member on ship.mmb_id = member.id
			where ship.rela_mmb_id = #{mmbId,jdbcType=VARCHAR} and ship.biz_type = 1002
		</if>
	</select>
	
	<!--根据会员id查询会员信息以及会员地域信息以及会员业务类型信息  -->
	<!-- <select id="queryMmbById" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		SELECT
		<include refid="Base_Column_List" />
		FROM
			mt_member mmb
		WHERE
			1 = 1
		<include refid="mmb_SearchCondition" />
		<if test="startFirst != null and startEnd != null">
			limit #{startFirst},#{startEnd}
		</if>
	</select> -->
	
	<!--条件查询总数  -->
	<select id="countMmbsByCondition" resultType="java.lang.Integer"
		parameterType="java.util.Map">
		SELECT
			count(*)
		FROM
			mt_member mmb
		WHERE
			1 = 1
		<include refid="mmb_SearchCondition" />
	</select>
	<!--根据集团名称查询该集团  -->
	<select id="quetyMmbByOrgName" resultMap="BaseResultMap" parameterType="java.util.HashMap">
		SELECT
			mmb.*
		FROM
			mt_member mmb
		WHERE
			1 = 1
		<if test="orgGroupName != ''">
		and mmb.mmb_fname like '%${orgGroupName}%'
		</if>
	</select>

	<!--验证 简称:mmbSname  管英文简称:mmbEngSname 注册全称:mmbFname 是否唯一-->
	<select id="getNumByCheckType" resultType="java.lang.Integer" >
		select count(1) from mt_member mmb where mmb.mmb_status = 0
		<if test="checkValue != null and checkValue != '' ">
			and ${checkField} = #{checkValue,jdbcType=VARCHAR}
		</if>
	<if test="id !=null and id != ''">
		and id != #{id,jdbcType=VARCHAR}
	</if>
	</select>
	<!-- 管理员账号:operationName  是否唯一-->
	<select id="getNumByOperationName" resultType="java.lang.Integer" >
		select count(1) from pub_user pu where 1=1
		<if test="checkValue != null and checkValue != '' " >
			and pu.acount_name = #{checkValue,jdbcType=VARCHAR}
		</if>
		<if test="id !=null and id != ''">
			and id != #{id,jdbcType=VARCHAR}
		</if>
	</select>
	<!--  根据群组Id查询出群组所包含的会员-->
	<select id="selsectMmmbByGroupId" resultMap="BaseResultMap" parameterType="java.util.Map">
		SELECT  DISTINCT
			mb.* 
		from mt_member mb
		INNER JOIN mt_mmb_group_rela mgre ON mb.id = mgre.mmb_id
		WHERE
			1 = 1 
		<if test="status != null" >
			AND mgre.status =  #{status,jdbcType=VARCHAR}
		</if>
		<if test="groupId != null" >
			AND mgre.group_id =  #{groupId,jdbcType=VARCHAR}
		</if>
		<if test="startFirst != null and startEnd != null">
				limit #{startFirst},#{startEnd}
		</if>
	</select>
	<select id="selsectMmmbByGroupIdCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		SELECT DISTINCT
			count(*)
		from mt_member mb
		INNER JOIN mt_mmb_group_rela mgre ON mb.id = mgre.mmb_id
		WHERE
			1 = 1 and mmb_status=0
		<if test="groupId != null" >
			AND mgre.group_id =  #{groupId,jdbcType=VARCHAR}
		</if>
		<if test="groupId != null" >
			AND mgre.status =  #{status,jdbcType=VARCHAR}
		</if>
	</select>
	
	<select id="findAllMtMember" resultMap="BaseResultMap">
		SELECT
			mmb.id, mmb.mmb_fname,mmb.mmb_engSname, 
			mmb.mmb_sname, mmb.mmb_type,
			mmb.mmb_homePage,mmb.mmb_email,
			mmb.mmb_phone,mmb.mmb_address,
			mmb.mmb_areaId,mmb.mmb_status,
			date_format(mmb.create_time,'%Y-%m-%d')
		FROM mt_member mmb
	</select>
	<select id="findAllMtMember2" resultMap="BaseResultMap">
		SELECT DISTINCT
			m.id,
			m.mmb_sname
		FROM
			mt_mmb_type t
		INNER JOIN mt_member m ON t.mmb_id = m.id
		WHERE
			t.mmb_type = '1004'
		AND m.mmb_status = 0
	</select>
</mapper>